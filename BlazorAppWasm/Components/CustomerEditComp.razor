@using BlazorAppWasm.Services
@using Data.Entities
@inject CustomerService customerService

<div>
    <div class="form-group">
        <input type="text" hidden value="@Id" class="form-control" id="idGuid" placeholder="">
        <label for="CompanyName">Company Name</label>
        <input type="text" @bind-value="CompanyName" class="form-control" id="idCompanyName" placeholder="">
    </div>
    <div class="form-group">
        <label for="ContactName">Contact Name</label>
        <input type="text" @bind-value="ContactName" class="form-control" id="idContactName" placeholder="">
    </div>
    <div class="form-group">
        <label for="Address">Address</label>
        <input type="text" @bind-value="Address" class="form-control" id="idAddress" placeholder="">
    </div>
    <div class="form-group">
        <label for="City">City</label>
        <input type="text" @bind-value="City" class="form-control" id="idCity" placeholder="">
    </div>
    <div class="form-group">
        <label for="Region">Region</label>
        <input type="text" @bind-value="Region" class="form-control" id="idRegion" placeholder="">
    </div>
    <div class="form-group">
        <label for="PostalCode">PostalCode</label>
        <input type="text" @bind-value="PostalCode" class="form-control" id="idPostalCode" placeholder="">
    </div>
    <div class="form-group">
        <label for="Country">Country</label>
        <input type="text" @bind-value="Country" class="form-control" id="idCountry" placeholder="">
    </div>
    <div class="form-group">
        <label for="Phone">Phone</label>
        <input type="text" @bind-value="Phone" class="form-control" id="idPhone" placeholder="">
    </div>

    <button onclick="@(async () => await UpdateCustomer())" class="btn btn-primary mt-3">Submit</button>
   
</div>


@code {

    [Parameter] public Guid Id { get; set; }
    [Parameter] public string? CompanyName { get; set; }
    [Parameter] public string? ContactName { get; set; }
    [Parameter] public string? Address { get; set; }
    [Parameter] public string? City { get; set; }
    [Parameter] public string? Region { get; set; }
    [Parameter] public string? PostalCode { get; set; }
    [Parameter] public string? Country { get; set; }
    [Parameter] public string? Phone { get; set; }

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task UpdateCustomer()
    {
        var customer = new Customer()
        {
             Id = this.Id,
             CompanyName = this.CompanyName,
             ContactName = this.ContactName,
             Address = this.Address,
             City = this.City,
             Region = this.Region,
             PostalCode = this.PostalCode,
             Country = this.Country,
             Phone = this.Phone,
        };
        var result = await customerService.UpdateCustomer(customer);
        await BlazoredModal.CloseAsync(ModalResult.Ok());
    }
}
